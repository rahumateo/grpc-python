# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import photofeed_pb2 as photofeed__pb2


class PhotoServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetPublicPhotos = channel.unary_unary(
        '/photo.PhotoService/GetPublicPhotos',
        request_serializer=photofeed__pb2.PhotoSearchRequest.SerializeToString,
        response_deserializer=photofeed__pb2.PhotoResult.FromString,
        )


class PhotoServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetPublicPhotos(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PhotoServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetPublicPhotos': grpc.unary_unary_rpc_method_handler(
          servicer.GetPublicPhotos,
          request_deserializer=photofeed__pb2.PhotoSearchRequest.FromString,
          response_serializer=photofeed__pb2.PhotoResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'photo.PhotoService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
